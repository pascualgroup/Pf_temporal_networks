filter(PS=='04') %>%
ggplot(aes(x=cutoff_prob, y=J, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[1])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_H <- module_size_evenness_per_layer_cutoff %>%
filter(PS=='05') %>%
ggplot(aes(x=cutoff_prob, y=J, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[2])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_I <- module_size_evenness_per_layer_cutoff %>%
filter(PS=='06') %>%
ggplot(aes(x=cutoff_prob, y=J, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[3])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
Fig <- plot_grid(panel_G,panel_H,panel_I, labels=c('G','H','I'), ncol=3, align='vh', label_size = 18, scale=0.95)
y.grob <- textGrob("Evenness (J)", gp=gpar(fontface="bold", col="black", fontsize=16), rot=90)
x.grob <- textGrob("Cut off", gp=gpar(fontface="bold", col="black", fontsize=16), vjust = -0.8)
Fig_cutoff_GHI <- grid.arrange(arrangeGrob(Fig, left = y.grob, bottom = x.grob))
plot_grid(title, Fig_cutoff_ABC,Fig_cutoff_DEF,Fig_cutoff_GHI, nrow=4, align='vh', rel_heights = c(0.096,0.32,0.32,0.32))
# svg('/home/shai/Dropbox/PLoS Biol/Fig_structure_high.svg', 10.66667,8)
plot_grid(Fig_cutoff_ABC,Fig_cutoff_DEF,Fig_cutoff_GHI, nrow=3, align='vh')
# Fig_S3GHI
module_size_evenness_per_layer_cutoff %>%
ggplot(aes(group=cutoff_prob, x=cutoff_prob, y=J, fill=PS))+
geom_boxplot()+
scale_fill_manual(values = ps_cols)+
labs(y='Evenness (J)', x='Cutoff')+
facet_wrap(~PS)+
mytheme
Fig_cutoff_GHI
grid.arrange(arrangeGrob(Fig, left = y.grob, bottom = x.grob))
results_cutoff_S <- fread('/media/Data/PLOS_Biol/Results/results_cutoff_S.csv',
colClasses = list(integer=c(1,2,3,4,6,10),
character=c(5,7,8,9),
double=11))
warnings()
results_cutoff_S <- as.tibble(results_cutoff_S)
experiments <- results_cutoff_S %>% distinct(scenario,PS,cutoff_prob,run)
scen <- 'S'
module_size_evenness_per_layer_cutoff <- NULL
for(i in 1:nrow(experiments)){
ps <- experiments$PS[i]
r <- experiments$run[i]
cutoff <- experiments$cutoff_prob[i]
print(paste(i,ps,cutoff,r,sep=' | '))
x <- results_cutoff_S %>%
filter(PS==ps, cutoff_prob==cutoff) %>%
filter(run==r)
evenness <- NULL
for (l in unique(x$layer)){
x_l <- subset(x, layer==l)
d <- x_l %>% group_by(module) %>% summarise(n=n())
d <- d$n
J <- vegan::diversity(d)/log(length(d))
tmp <- tibble(scenario=scen,run=r,layer=l, n_modules=length(d), J=J)
evenness <- rbind(evenness, tmp)
}
evenness$PS <- ps
evenness$run <- run
evenness$cutoff_prob <- cutoff
module_size_evenness_per_layer_cutoff <- rbind(module_size_evenness_per_layer_cutoff, evenness)
}
persistence_df_cutoff_S <- read_csv('/media/Data/PLOS_Biol/Results/persistence_df_cutoff_S.csv', col_types = 'cidciiidc')
## Relative persistence
panel_A <- persistence_df_cutoff_S %>%
filter(PS=='04', type=='Module') %>%
filter(cutoff_prob>=0.25) %>%
ggplot(aes(x=cutoff_prob, y=relative_persistence, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[1])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_B <- persistence_df_cutoff_S %>%
filter(PS=='05', type=='Module') %>%
filter(cutoff_prob>=0.25) %>%
ggplot(aes(x=cutoff_prob, y=relative_persistence, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[2])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_C <- persistence_df_cutoff_S %>%
filter(PS=='06', type=='Module') %>%
filter(cutoff_prob>=0.25) %>%
ggplot(aes(x=cutoff_prob, y=relative_persistence, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[3])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
Fig <- plot_grid(panel_A,panel_B,panel_C, labels=c('A','B','C'), ncol=3, align='vh', label_size = 18, scale=0.95)
y.grob <- textGrob("Relative persistence", gp=gpar(fontface="bold", col="black", fontsize=16), rot=90)
# x.grob <- textGrob("Cut off", gp=gpar(fontface="bold", col="black", fontsize=16), vjust = -0.8)
Fig_cutoff_ABC <- grid.arrange(arrangeGrob(Fig, left = y.grob))
## Modules per layer
panel_D <- results_cutoff_S %>%
filter(PS=='04') %>%
filter(cutoff_prob>=0.25) %>%
group_by(scenario, run, cutoff_prob, layer) %>%
summarise(modules_per_layer=length(unique(module))) %>%
ggplot(aes(x=cutoff_prob, y=modules_per_layer, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[1])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_E <- results_cutoff_S %>%
filter(PS=='05') %>%
filter(cutoff_prob>=0.25) %>%
group_by(scenario, run, cutoff_prob, layer) %>%
summarise(modules_per_layer=length(unique(module))) %>%
ggplot(aes(x=cutoff_prob, y=modules_per_layer, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[2])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_F <- results_cutoff_S %>%
filter(PS=='06') %>%
filter(cutoff_prob>=0.25) %>%
group_by(scenario, run, cutoff_prob, layer) %>%
summarise(modules_per_layer=length(unique(module))) %>%
ggplot(aes(x=cutoff_prob, y=modules_per_layer, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[3])+
stat_summary(fun.y=mean, color="red", geom="point", shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
Fig <- plot_grid(panel_D,panel_E,panel_F, labels=c('D','E','F'), ncol=3, align='vh', label_size = 18, scale=0.95)
y.grob <- textGrob("Modules per layer", gp=gpar(fontface="bold", col="black", fontsize=16), rot=90)
# x.grob <- textGrob("Cut off", gp=gpar(fontface="bold", col="black", fontsize=16), vjust = -0.8)
Fig_cutoff_DEF <- grid.arrange(arrangeGrob(Fig, left = y.grob))
## Evenness in module size
panel_G <- module_size_evenness_per_layer_cutoff %>%
filter(PS=='04') %>%
ggplot(aes(x=cutoff_prob, y=J, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[1])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_H <- module_size_evenness_per_layer_cutoff %>%
filter(PS=='05') %>%
ggplot(aes(x=cutoff_prob, y=J, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[2])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
panel_I <- module_size_evenness_per_layer_cutoff %>%
filter(PS=='06') %>%
ggplot(aes(x=cutoff_prob, y=J, group=cutoff_prob))+
geom_boxplot(outlier.size = 0, fill=ps_cols[3])+
stat_summary(fun.y=mean, color="red", geom="point",shape=18, size=3,show.legend = FALSE)+
scale_x_continuous(breaks = seq(0.05,0.95,0.15))+
manuscript_theme+theme(axis.title = element_blank())
Fig <- plot_grid(panel_G,panel_H,panel_I, labels=c('G','H','I'), ncol=3, align='vh', label_size = 18, scale=0.95)
y.grob <- textGrob("Evenness (J)", gp=gpar(fontface="bold", col="black", fontsize=16), rot=90)
x.grob <- textGrob("Cut off", gp=gpar(fontface="bold", col="black", fontsize=16), vjust = -0.8)
Fig_cutoff_GHI <- grid.arrange(arrangeGrob(Fig, left = y.grob, bottom = x.grob))
# svg('/home/shai/Dropbox/PLoS Biol/Fig_structure_high.svg', 10.66667,8)
plot_grid(Fig_cutoff_ABC,Fig_cutoff_DEF,Fig_cutoff_GHI, nrow=3, align='vh')
# Also plot an example of modules
results_cutoff_S %>%
# filter(PS=='06') %>%
filter(run==1) %>%
filter(cutoff_prob>=0.5) %>%
distinct(PS,cutoff_prob, module, layer) %>%
group_by(PS,cutoff_prob,module) %>% summarise(birth_layer=min(layer),death_layer=max(layer)+1) %>%
ggplot(aes(xmin=birth_layer, xmax=death_layer, ymin=module, ymax=module, color=PS, fill=PS))+
geom_rect(size=1)+
scale_color_manual(values=ps_cols)+
scale_fill_manual(values=ps_cols)+
facet_grid(cutoff_prob~PS, scales = 'free')+
mytheme+theme(axis.title = element_blank(), legend.position = 'none')
plot_grid(Fig_cutoff_ABC,Fig_cutoff_DEF,Fig_cutoff_GHI, nrow=3, align='vh')
results_cutoff_S %>%
# filter(PS=='06') %>%
filter(run==1) %>%
filter(cutoff_prob>=0.5) %>%
distinct(PS,cutoff_prob, module, layer) %>%
group_by(PS,cutoff_prob,module) %>% summarise(birth_layer=min(layer),death_layer=max(layer)+1) %>%
ggplot(aes(xmin=birth_layer, xmax=death_layer, ymin=module, ymax=module, color=PS, fill=PS))+
geom_rect(size=1)+
scale_color_manual(values=ps_cols)+
scale_fill_manual(values=ps_cols)+
facet_grid(cutoff_prob~PS, scales = 'free')+
mytheme+theme(axis.title = element_blank(), legend.position = 'none')
sensitivity_experiments <- expand.grid(PS=as.character(100:211),
scenario=c('S','G'),
run=1,
cutoff_prob=0.85,
stringsAsFactors = F)
source('functions.R')
sensitivity_experiments <- expand.grid(PS=as.character(100:211),
scenario=c('S','G'),
run=1,
cutoff_prob=0.85,
stringsAsFactors = F)
sensitivity_experiments
run <- 1
cutoff_prob <- 0.85
module_results_sensitivity <- c()
temporal_diversity_sensitivity <- NULL
exp='001'
exp='001'
for (i in 1:nrow(sensitivity_experiments)){
PS <- sensitivity_experiments$PS[i]
scenario <- sensitivity_experiments$scenario[i]
x <- get_modularity_results(PS,scenario,exp,run,cutoff_prob, folder = '/media/Data/PLOS_Biol/Results/sensitivity_analysis/')
module_results_sensitivity <- rbind(module_results_sensitivity,x)
x <- get_temporal_diversity(PS,scenario,exp,run,cutoff_prob, folder = '/media/Data/PLOS_Biol/Results/sensitivity_analysis/')
temporal_diversity_sensitivity <- rbind(temporal_diversity_sensitivity, x)
}
module_results_sensitivity
module_results_sensitivity$strain_cluster <- as.integer(module_results_sensitivity$strain_cluster)
module_results_sensitivity <- as.tibble(module_results_sensitivity)
temporal_diversity_sensitivity <- as.tibble(temporal_diversity_sensitivity)
x <- module_results_sensitivity %>%
filter(layer<=300) %>%
mutate(scenario=factor(scenario, levels=c('S','G'))) %>%
select(scenario, PS, run, layer, module) %>%
group_by(scenario, PS,run,module) %>%
summarise(birth_layer=min(layer), death_layer=max(layer), persistence=death_layer-birth_layer+1) %>%
mutate(relative_persistence=persistence/(300-birth_layer+1))
panel_A <- x %>%
ggplot(aes(x=relative_persistence, fill=scenario))+
geom_density()+
scale_fill_manual(values = c('red','blue'))+
labs(x='Relativer persistence', y='Density')+
manuscript_theme+theme(axis.text = element_text(size=20),
axis.title = element_text(size=20))
panel_B <- temporal_diversity_sensitivity %>%
mutate(scenario=factor(scenario, levels=c('S','G'))) %>%
ggplot(aes(x=scenario, y=D_normalized, fill=scenario))+
geom_boxplot()+
scale_fill_manual(values = c('red','blue'))+
labs(x='Scenario', y='Evenness (J)')+
manuscript_theme+theme(axis.text = element_text(size=20),
axis.title = element_text(size=20))
Fig <- plot_grid(panel_A,panel_B, labels=c('A','B'), ncol=2, align='vh', label_size = 18)
Fig
module_persistence_sensitivity
get_epidemiology_results <- function(PS,scenario,exp,run,cutoff_prob,folder='/media/Data/PLOS_Biol/Results/epi/'){
files <- list.files(path = folder, pattern = paste('PS',PS,'_',scenario,'_E',exp,'_R',run,'_',cutoff_prob,sep=''), full.names = T)
if (length(files)==0){
print(paste('No files found for ','PS',PS,'_',scenario,'_E',exp,'_R',run,'_',cutoff_prob,sep=''))
return(NULL)
}
res_df <- NULL
for (f in files){
print(f)
x <- read.csv(f)
head(x)
}
res_df <- rbind(res_df, x)
return(as.tibble(res_df))
}
experiments <- expand.grid(PS=c('06'),
scen=c('S','G','N'),
exp='001',
run=1:50,
stringsAsFactors = F)
cutoff_df <- tibble(PS=c('04','05','06','18'),
cutoff_prob=c(0.3,0.6,0.85,0.85))
experiments %<>% left_join(cutoff_df)
experiments
epi_results <- NULL
for (i in 1:nrow(experiments)){
PS <- experiments$PS[i]
scenario <- experiments$scen[i]
cutoff_prob <- experiments$cutoff_prob[i]
run <- experiments$run[i]
tmp <- get_epidemiology_results(PS = PS,scenario = scenario,exp = '001',run = run, cutoff_prob = cutoff_prob,
folder='/media/Data/PLOS_Biol/Results/epi_alleles/')
epi_results <- rbind(epi_results, tmp)
}
epi_results
epi_results$PS <- str_pad(epi_results$PS, 2, 'left', '0')
epi_results$exp <- str_pad(epi_results$exp, 3, 'left', '0')
epi_results %>% group_by(scenario,PS,case) %>% summarise(n=length(unique(run))) %>% print(n=Inf)
# Limit the infections
infection_limit <- epi_results %>%
group_by(PS,scenario,case) %>%
summarise(max_infections = max(infection_id)) %>%
group_by(PS,scenario) %>%
summarise(infection_limit=min(max_infections,na.rm = T))
make_panel_fig4 <- function(ps,scen,col){
panel <- epi_results %>%
filter(PS==ps) %>%
filter(scenario==scen) %>%
group_by(case,infection_id) %>%
summarise(mean_doi=mean(duration),
sd_doi=sd(duration),
n=length(duration),
CI_doi=1.96*sd(duration)/sqrt(n)) %>%
ggplot(aes(infection_id,mean_doi,color=case))+
geom_line()+
geom_errorbar(aes(x=infection_id,ymin=mean_doi-CI_doi,ymax=mean_doi+CI_doi))+
# geom_smooth(method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F)+
scale_color_manual(values=c('black',col,'gray'))+
scale_y_continuous(limits = c(0,360), breaks = seq(0,360,60))+
manuscript_theme+theme(axis.title = element_blank())
return(panel)
}
panel_A <- make_panel_fig4('06','S',scenario_cols[1])
panel_B <- make_panel_fig4('06','G',scenario_cols[2])
panel_C <- make_panel_fig4('06','N',scenario_cols[3])
panel_D <- epi_results %>%
filter(PS=='06') %>%
filter(case=='R') %>%
mutate(scenario=factor(scenario, levels=c('S','G','N'))) %>%
group_by(scenario,infection_id) %>%
summarise(mean_doi=mean(duration),
sd_doi=sd(duration),
n=length(duration),
CI_doi=1.96*sd(duration)/sqrt(n)) %>%
ggplot()+
geom_line(aes(infection_id,mean_doi,color=scenario))+
geom_errorbar(aes(x=infection_id,ymin=mean_doi-CI_doi,ymax=mean_doi+CI_doi,color=scenario))+
# geom_smooth(aes(infection_id,mean_doi,color=scenario), method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F)+
# geom_smooth(aes(infection_id,mean_doi-CI_doi,color=scenario), method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F, alpha=0.5, linetype='dashed',size=0.5)+
# geom_smooth(aes(infection_id,mean_doi+CI_doi,color=scenario), method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F, alpha=0.5, linetype='dashed',size=0.5)+
scale_color_manual(values=scenario_cols)+
scale_x_continuous(limits=c(0,min(infection_limit$infection_limit)))+
scale_y_continuous(limits = c(0,360), breaks = seq(0,360,60))+
manuscript_theme+theme(axis.title = element_blank())
Fig <- plot_grid(panel_A,panel_B,panel_C,panel_D, labels=c('A','B','C','D'), ncol=2, align='vh', label_size = 18, scale=0.95)
y.grob <- textGrob("Mean duration of infection", gp=gpar(fontface="bold", col="black", fontsize=16), rot=90)
x.grob <- textGrob("Number of infections", gp=gpar(fontface="bold", col="black", fontsize=16), vjust = -0.8)
Fig_4 <- grid.arrange(arrangeGrob(Fig, left = y.grob, bottom = x.grob))
Fig_4
library(minpack.lm)
epi_results
minpack.lm
install.packages("minpack.lm")
epi_results
prep.packages(c('tidyverse','magrittr','sqldf','igraph','data.table','googlesheets','utils','cowplot','grid','gridExtra', 'minpack.lm'), verbose = F)
epi_results
### Test several models to fit the data
model_comparison_results <- list()
for (scen in c('S','G','N')){
# Model with all data ignoring group
fit <- nlsLM(formula = duration~a*exp(-b*infection_id),
data = epi_results,
subset = (scenario==scen & case=='R' & infection_id<=50),
start = c(a=1, b=0))
# Linear model to show the decay is probably exponential
fit_lm <- lm(duration~infection_id,
data=epi_results,
subset = (scenario==scen & case=='R' & infection_id<=50))
# Compare models
AIC <- AIC(fit,fit_lm)
AIC <- AIC[order(AIC$AIC),]
AIC$delta <- c(0, diff(AIC$AIC))
AIC
model_comparison_results[[scen]] <- AIC
}
model_comparison_results
# Explore the best model for each scenario
fit_best_model_scenario <- function(scen){
fit <- nlsLM(formula = duration~a*exp(-b*infection_id),
data = epi_results,
subset = (scenario==scen & case=='R' & infection_id<=50),
start = c(a=1, b=0))
fit_summary <- summary(fit)
a_coeff <- fit_summary$coefficients[1,1]
b_coeff <- fit_summary$coefficients[2,1]
b_coeff_se <- fit_summary$coefficients[2,2]
return(c(a_coeff,b_coeff,b_coeff_se))
}
b_coeff_S <- fit_best_model_scenario('S')[2]
b_coeff_G <- fit_best_model_scenario('G')[2]
b_coeff_N <- fit_best_model_scenario('N')[2]
b_coeff_G/b_coeff_S
b_coeff_N/b_coeff_S
a_coeff_S <- fit_best_model_scenario('S')[1]
a_coeff_G <- fit_best_model_scenario('G')[1]
a_coeff_N <- fit_best_model_scenario('N')[1]
b_coeff_S_se <- fit_best_model_scenario('S')[3]
b_coeff_G_se <- fit_best_model_scenario('G')[3]
b_coeff_N_se <- fit_best_model_scenario('N')[3]
# Calculate the doi of a new infection in a 5-months old baby. The number of
# infections in 5 months depends on the EIR.
EIR_df <- data.frame(scenario='',run=0,EIR_run=0,stringsAsFactors = F)
for (i in 1:50){
tmp <- get_data(parameter_space = '06', scenario = 'S', experiment = '001', run = i, cutoff_prob = 0.85, use_sqlite = T, tables_to_get = 'summary_general')[[1]]
EIR_df <- rbind(EIR_df, c('S',i,mean(tmp$EIR)))
tmp <- get_data(parameter_space = '06', scenario = 'G', experiment = '001', run = i, cutoff_prob = 0.85, use_sqlite = T, tables_to_get = 'summary_general')[[1]]
EIR_df <- rbind(EIR_df, c('G',i,mean(tmp$EIR)))
tmp <- get_data(parameter_space = '06', scenario = 'N', experiment = '001', run = i, cutoff_prob = 0.85, use_sqlite = T, tables_to_get = 'summary_general')[[1]]
EIR_df <- rbind(EIR_df, c('N',i,mean(tmp$EIR)))
}
EIR_df <- EIR_df[-1,]
EIR_df$EIR_run <- as.numeric(EIR_df$EIR_run)
EIR_df <- as.tibble(EIR_df) %>% group_by(scenario) %>% summarise(EIR_mean=mean(EIR_run))
# Calculate per month
doi_by_month_S <- tibble(m=1:60, scenario='S')
doi_by_month_S$d <- a_coeff_S*exp(-b_coeff_S*subset(EIR_df, scenario=='S')$EIR_mean*doi_by_month_S$m)
doi_by_month_S$d_se_U <- a_coeff_S*exp(-(b_coeff_S+b_coeff_S_se)*subset(EIR_df, scenario=='S')$EIR_mean*doi_by_month_S$m)
doi_by_month_S$d_se_L <- a_coeff_S*exp(-(b_coeff_S-b_coeff_S_se)*subset(EIR_df, scenario=='S')$EIR_mean*doi_by_month_S$m)
doi_by_month_G <- tibble(m=1:60, scenario='G')
doi_by_month_G$d <- a_coeff_G*exp(-b_coeff_G*subset(EIR_df, scenario=='G')$EIR_mean*doi_by_month_G$m)
doi_by_month_G$d_se_U <- a_coeff_G*exp(-(b_coeff_G+b_coeff_G_se)*subset(EIR_df, scenario=='G')$EIR_mean*doi_by_month_S$m)
doi_by_month_G$d_se_L <- a_coeff_G*exp(-(b_coeff_G-b_coeff_G_se)*subset(EIR_df, scenario=='G')$EIR_mean*doi_by_month_S$m)
doi_by_month_N <- tibble(m=1:60, scenario='N')
doi_by_month_N$d <- a_coeff_N*exp(-b_coeff_N*subset(EIR_df, scenario=='N')$EIR_mean*doi_by_month_N$m)
doi_by_month_N$d_se_U <- a_coeff_N*exp(-(b_coeff_N+b_coeff_N_se)*subset(EIR_df, scenario=='N')$EIR_mean*doi_by_month_N$m)
doi_by_month_N$d_se_L <- a_coeff_N*exp(-(b_coeff_N-b_coeff_N_se)*subset(EIR_df, scenario=='N')$EIR_mean*doi_by_month_N$m)
doi_by_month <- rbind(doi_by_month_S,doi_by_month_G,doi_by_month_N)
doi_by_month %>% filter(m==5)
doi_by_month %>%
# filter(scenario=='G') %>%
ggplot(aes(color=scenario))+
geom_line(aes(x=m, y=d))+
geom_line(aes(x=m, y=d_se_U), linetype='dashed')+
geom_line(aes(x=m, y=d_se_L), linetype='dashed')+
scale_color_manual(values = c('blue','orange','red'))+
scale_x_continuous(breaks=seq(0,60,5))+
scale_y_continuous(breaks=seq(0,300,50))+
labs(x='Host age (months)', y='Predicted duration of infection')+
manuscript_theme
make_panel_allele_curve <- function(ps,scen,col){
panel <- epi_results %>%
filter(PS==ps) %>%
filter(scenario==scen) %>%
group_by(case,infection_id) %>%
summarise(mean_alleles=mean(alleles_seen),
sd_alleles=sd(alleles_seen),
n=length(alleles_seen),
CI_alleles=1.96*sd(alleles_seen)/sqrt(n)) %>%
ggplot(aes(infection_id,mean_alleles,color=case))+
geom_line()+
geom_errorbar(aes(x=infection_id,ymin=mean_alleles-CI_alleles,ymax=mean_alleles+CI_alleles))+
# geom_smooth(method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F)+
scale_color_manual(values=c('black',col,'gray'))+
# scale_y_continuous(limits = c(0,360), breaks = seq(0,360,60))+
manuscript_theme+theme(axis.title = element_blank())
return(panel)
}
panel_A <- make_panel_allele_curve('06','S',scenario_cols[1])
panel_B <- make_panel_allele_curve('06','G',scenario_cols[2])
panel_C <- make_panel_allele_curve('06','N',scenario_cols[3])
panel_D <- epi_results %>%
filter(PS=='06') %>%
filter(case=='R') %>%
mutate(scenario=factor(scenario, levels=c('S','G','N'))) %>%
group_by(scenario,infection_id) %>%
summarise(mean_alleles=mean(alleles_seen),
sd_alleles=sd(alleles_seen),
n=length(alleles_seen),
CI_alleles=1.96*sd(alleles_seen)/sqrt(n)) %>%
ggplot()+
geom_line(aes(infection_id,mean_alleles,color=scenario))+
geom_errorbar(aes(x=infection_id,ymin=mean_alleles-CI_alleles,ymax=mean_alleles+CI_alleles,color=scenario))+
# geom_smooth(aes(infection_id,mean_doi,color=scenario), method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F)+
# geom_smooth(aes(infection_id,mean_doi-CI_doi,color=scenario), method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F, alpha=0.5, linetype='dashed',size=0.5)+
# geom_smooth(aes(infection_id,mean_doi+CI_doi,color=scenario), method='nls',formula = y~exp(a + b * x), method.args=list(start = list(a = 0, b = 0)),se=F, alpha=0.5, linetype='dashed',size=0.5)+
scale_color_manual(values=scenario_cols)+
# scale_x_continuous(limits=c(0,min(infection_limit$infection_limit)))+
# scale_y_continuous(limits = c(0,360), breaks = seq(0,360,60))+
manuscript_theme+theme(axis.title = element_blank())
Fig <- plot_grid(panel_A,panel_B,panel_C,panel_D, labels=c('A','B','C','D'), ncol=2, align='vh', label_size = 18, scale=0.95)
y.grob <- textGrob("Mean # alleles accumulated", gp=gpar(fontface="bold", col="black", fontsize=16), rot=90)
x.grob <- textGrob("Number of infections", gp=gpar(fontface="bold", col="black", fontsize=16), vjust = -0.8)
grid.arrange(arrangeGrob(Fig, left = y.grob, bottom = x.grob))
EIR_df
# Calculate the doi of a new infection in a 5-months old baby. The number of
# infections in 5 months depends on the EIR.
EIR_df <- data.frame(scenario='',run=0,EIR_run=0,stringsAsFactors = F)
for (i in 1:50){
tmp <- get_data(parameter_space = '06', scenario = 'S', experiment = '001', run = i, cutoff_prob = 0.85, use_sqlite = F, tables_to_get = 'summary_general')[[1]]
EIR_df <- rbind(EIR_df, c('S',i,mean(tmp$EIR)))
tmp <- get_data(parameter_space = '06', scenario = 'G', experiment = '001', run = i, cutoff_prob = 0.85, use_sqlite = F, tables_to_get = 'summary_general')[[1]]
EIR_df <- rbind(EIR_df, c('G',i,mean(tmp$EIR)))
tmp <- get_data(parameter_space = '06', scenario = 'N', experiment = '001', run = i, cutoff_prob = 0.85, use_sqlite = F, tables_to_get = 'summary_general')[[1]]
EIR_df <- rbind(EIR_df, c('N',i,mean(tmp$EIR)))
}
EIR_df
EIR_df <- EIR_df[-1,]
EIR_df$EIR_run <- as.numeric(EIR_df$EIR_run)
EIR_df <- as.tibble(EIR_df) %>% group_by(scenario) %>% summarise(EIR_mean=mean(EIR_run))
# Calculate per month
doi_by_month_S <- tibble(m=1:60, scenario='S')
doi_by_month_S$d <- a_coeff_S*exp(-b_coeff_S*subset(EIR_df, scenario=='S')$EIR_mean*doi_by_month_S$m)
doi_by_month_S$d_se_U <- a_coeff_S*exp(-(b_coeff_S+b_coeff_S_se)*subset(EIR_df, scenario=='S')$EIR_mean*doi_by_month_S$m)
doi_by_month_S$d_se_L <- a_coeff_S*exp(-(b_coeff_S-b_coeff_S_se)*subset(EIR_df, scenario=='S')$EIR_mean*doi_by_month_S$m)
doi_by_month_G <- tibble(m=1:60, scenario='G')
doi_by_month_G$d <- a_coeff_G*exp(-b_coeff_G*subset(EIR_df, scenario=='G')$EIR_mean*doi_by_month_G$m)
doi_by_month_G$d_se_U <- a_coeff_G*exp(-(b_coeff_G+b_coeff_G_se)*subset(EIR_df, scenario=='G')$EIR_mean*doi_by_month_S$m)
doi_by_month_G$d_se_L <- a_coeff_G*exp(-(b_coeff_G-b_coeff_G_se)*subset(EIR_df, scenario=='G')$EIR_mean*doi_by_month_S$m)
doi_by_month_N <- tibble(m=1:60, scenario='N')
doi_by_month_N$d <- a_coeff_N*exp(-b_coeff_N*subset(EIR_df, scenario=='N')$EIR_mean*doi_by_month_N$m)
doi_by_month_N$d_se_U <- a_coeff_N*exp(-(b_coeff_N+b_coeff_N_se)*subset(EIR_df, scenario=='N')$EIR_mean*doi_by_month_N$m)
doi_by_month_N$d_se_L <- a_coeff_N*exp(-(b_coeff_N-b_coeff_N_se)*subset(EIR_df, scenario=='N')$EIR_mean*doi_by_month_N$m)
doi_by_month <- rbind(doi_by_month_S,doi_by_month_G,doi_by_month_N)
doi_by_month %>% filter(m==5)
doi_by_month %>%
# filter(scenario=='G') %>%
ggplot(aes(color=scenario))+
geom_line(aes(x=m, y=d))+
geom_line(aes(x=m, y=d_se_U), linetype='dashed')+
geom_line(aes(x=m, y=d_se_L), linetype='dashed')+
scale_color_manual(values = c('blue','orange','red'))+
scale_x_continuous(breaks=seq(0,60,5))+
scale_y_continuous(breaks=seq(0,300,50))+
labs(x='Host age (months)', y='Predicted duration of infection')+
manuscript_theme
doi_by_month %>% filter(m==5)
# Initialize --------------------------------------------------------------
## @knitr Initialize
source('functions.R')
prep.packages(c("tidyverse","magrittr","data.table","igraph","Matrix","dplyr","cowplot",'sqldf'))
